{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: [],\n  addItem: () => {},\n  removeItem: () => {},\n  increaseQuantity: () => {},\n  decreaseQuantity: () => {}\n};\nconst cartSlice = createSlice({\n  name: \"shoppingCart\",\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      const newItem = action.payload;\n      const existingItemIndex = state.items.findIndex(item => item.id === newItem.id);\n      if (existingItemIndex !== -1) {\n        state.items[existingItemIndex].quantity += newItem.quantity;\n      } else {\n        state.items.push(newItem);\n      }\n    },\n    removeItem: (state, action) => {\n      state.items = state.items.filter(item => item.id !== action.payload.id);\n    },\n    increaseQuantity: (state, action) => {\n      state.items = state.items.map(item => item.id === action.payload.id ? {\n        ...item,\n        quantity: item.quantity + 1\n      } : item);\n    },\n    decreaseQuantity: (state, action) => {\n      state.items = state.items.map(item => {\n        if (item.id === action.payload.id) {\n          const updatedItem = {\n            ...item,\n            quantity: item.quantity - 1\n          };\n          return updatedItem.quantity > 0 ? updatedItem : null;\n        }\n        return item;\n      });\n      state.items = state.items.filter(item => item !== null);\n    }\n  }\n});\nexport const store = configureStore({\n  reducer: cartSlice.reducer\n});\nexport const {\n  addItem,\n  removeItem,\n  increaseQuantity,\n  decreaseQuantity\n} = cartSlice.actions;","map":{"version":3,"names":["configureStore","createSlice","initialState","items","addItem","removeItem","increaseQuantity","decreaseQuantity","cartSlice","name","reducers","state","action","newItem","payload","existingItemIndex","findIndex","item","id","quantity","push","filter","map","updatedItem","store","reducer","actions"],"sources":["/home/adam/Plocha/React-Projects/Small-Projects/01-starting-project/src/store/store.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  items: [],\n  addItem: () => {},\n  removeItem: () => {},\n  increaseQuantity: () => {},\n  decreaseQuantity: () => {},\n};\n\nconst cartSlice = createSlice({\n  name: \"shoppingCart\",\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      const newItem = action.payload;\n      const existingItemIndex = state.items.findIndex(\n        (item) => item.id === newItem.id\n      );\n\n      if (existingItemIndex !== -1) {\n        state.items[existingItemIndex].quantity += newItem.quantity;\n      } else {\n        state.items.push(newItem);\n      }\n    },\n    removeItem: (state, action) => {\n      state.items = state.items.filter((item) => item.id !== action.payload.id);\n    },\n    increaseQuantity: (state, action) => {\n      state.items = state.items.map((item) =>\n        item.id === action.payload.id\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      );\n    },\n    decreaseQuantity: (state, action) => {\n        state.items = state.items.map((item) => {\n          if (item.id === action.payload.id) {\n            const updatedItem = { ...item, quantity: item.quantity - 1 };\n            return updatedItem.quantity > 0 ? updatedItem : null;\n          }\n          return item;\n        });\n        state.items = state.items.filter((item) => item !== null);\n      },\n  },\n});\n\nexport const store = configureStore({\n  reducer: cartSlice.reducer,\n});\nexport const { addItem, removeItem, increaseQuantity, decreaseQuantity } =\n  cartSlice.actions;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAE9D,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAC;EACjBC,UAAU,EAAEA,CAAA,KAAM,CAAC,CAAC;EACpBC,gBAAgB,EAAEA,CAAA,KAAM,CAAC,CAAC;EAC1BC,gBAAgB,EAAEA,CAAA,KAAM,CAAC;AAC3B,CAAC;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,cAAc;EACpBP,YAAY;EACZQ,QAAQ,EAAE;IACRN,OAAO,EAAEA,CAACO,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,iBAAiB,GAAGJ,KAAK,CAACR,KAAK,CAACa,SAAS,CAC5CC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAChC,CAAC;MAED,IAAIH,iBAAiB,KAAK,CAAC,CAAC,EAAE;QAC5BJ,KAAK,CAACR,KAAK,CAACY,iBAAiB,CAAC,CAACI,QAAQ,IAAIN,OAAO,CAACM,QAAQ;MAC7D,CAAC,MAAM;QACLR,KAAK,CAACR,KAAK,CAACiB,IAAI,CAACP,OAAO,CAAC;MAC3B;IACF,CAAC;IACDR,UAAU,EAAEA,CAACM,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACkB,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAACI,EAAE,CAAC;IAC3E,CAAC;IACDZ,gBAAgB,EAAEA,CAACK,KAAK,EAAEC,MAAM,KAAK;MACnCD,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACmB,GAAG,CAAEL,IAAI,IACjCA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAACI,EAAE,GACzB;QAAE,GAAGD,IAAI;QAAEE,QAAQ,EAAEF,IAAI,CAACE,QAAQ,GAAG;MAAE,CAAC,GACxCF,IACN,CAAC;IACH,CAAC;IACDV,gBAAgB,EAAEA,CAACI,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACmB,GAAG,CAAEL,IAAI,IAAK;QACtC,IAAIA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAACI,EAAE,EAAE;UACjC,MAAMK,WAAW,GAAG;YAAE,GAAGN,IAAI;YAAEE,QAAQ,EAAEF,IAAI,CAACE,QAAQ,GAAG;UAAE,CAAC;UAC5D,OAAOI,WAAW,CAACJ,QAAQ,GAAG,CAAC,GAAGI,WAAW,GAAG,IAAI;QACtD;QACA,OAAON,IAAI;MACb,CAAC,CAAC;MACFN,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACkB,MAAM,CAAEJ,IAAI,IAAKA,IAAI,KAAK,IAAI,CAAC;IAC3D;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAMO,KAAK,GAAGxB,cAAc,CAAC;EAClCyB,OAAO,EAAEjB,SAAS,CAACiB;AACrB,CAAC,CAAC;AACF,OAAO,MAAM;EAAErB,OAAO;EAAEC,UAAU;EAAEC,gBAAgB;EAAEC;AAAiB,CAAC,GACtEC,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
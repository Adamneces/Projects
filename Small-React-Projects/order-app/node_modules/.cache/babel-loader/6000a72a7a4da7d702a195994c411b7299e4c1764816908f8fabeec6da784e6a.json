{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: [],\n  addItem: () => {},\n  removeItem: () => {},\n  increaseQuantity: () => {},\n  decreaseQuantity: () => {}\n};\nconst cartSlice = createSlice({\n  name: 'shoppingCart',\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      state.items.push(action.payload);\n    },\n    removeItem: (state, action) => {\n      state.items = state.items.filter(item => item.id !== action.payload.id);\n    },\n    increaseQuantity: (state, action) => {\n      state.items = state.items.map(item => item.id === action.payload.id ? {\n        ...item,\n        quantity: item.quantity + 1\n      } : item);\n    },\n    decreaseQuantity: (state, action) => {\n      state.items = state.items.map(item => item.id === action.payload.id ? {\n        ...item,\n        quantity: item.quantity - 1\n      } : item);\n    }\n  }\n});\nexport const store = configureStore({\n  reducer: cart\n});\nexport const {\n  addItem,\n  removeItem,\n  increaseQuantity,\n  decreaseQuantity\n} = cartSlice.actions;","map":{"version":3,"names":["configureStore","createSlice","initialState","items","addItem","removeItem","increaseQuantity","decreaseQuantity","cartSlice","name","reducers","state","action","push","payload","filter","item","id","map","quantity","store","reducer","cart","actions"],"sources":["/home/adam/Plocha/React-Projects/Small-Projects/01-starting-project/src/store/store.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    items: [],\n    addItem: () => {},\n    removeItem: () => {},\n    increaseQuantity: () => {},\n    decreaseQuantity: () => {},\n}\n\nconst cartSlice = createSlice({\n    name: 'shoppingCart',\n    initialState,\n    reducers: {\n        addItem: (state, action) => {\n            state.items.push(action.payload);\n        },\n        removeItem: (state, action) => {\n            state.items = state.items.filter(item => item.id!== action.payload.id);\n        },\n        increaseQuantity: (state, action) => {\n            state.items = state.items.map(item => item.id === action.payload.id? {...item, quantity: item.quantity + 1 } : item);\n        },\n        decreaseQuantity: (state, action) => {\n            state.items = state.items.map(item => item.id === action.payload.id? {...item, quantity: item.quantity - 1 } : item);\n        }\n    }\n});\n\nexport const store = configureStore({\n    reducer: cart,\n})\n\nexport const { addItem, removeItem, increaseQuantity, decreaseQuantity } = cartSlice.actions;"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAE9D,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAC;EACjBC,UAAU,EAAEA,CAAA,KAAM,CAAC,CAAC;EACpBC,gBAAgB,EAAEA,CAAA,KAAM,CAAC,CAAC;EAC1BC,gBAAgB,EAAEA,CAAA,KAAM,CAAC;AAC7B,CAAC;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC1BQ,IAAI,EAAE,cAAc;EACpBP,YAAY;EACZQ,QAAQ,EAAE;IACNN,OAAO,EAAEA,CAACO,KAAK,EAAEC,MAAM,KAAK;MACxBD,KAAK,CAACR,KAAK,CAACU,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACpC,CAAC;IACDT,UAAU,EAAEA,CAACM,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACY,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAIL,MAAM,CAACE,OAAO,CAACG,EAAE,CAAC;IAC1E,CAAC;IACDX,gBAAgB,EAAEA,CAACK,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACe,GAAG,CAACF,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACG,EAAE,GAAE;QAAC,GAAGD,IAAI;QAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;MAAE,CAAC,GAAGH,IAAI,CAAC;IACxH,CAAC;IACDT,gBAAgB,EAAEA,CAACI,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACe,GAAG,CAACF,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACG,EAAE,GAAE;QAAC,GAAGD,IAAI;QAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;MAAE,CAAC,GAAGH,IAAI,CAAC;IACxH;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMI,KAAK,GAAGpB,cAAc,CAAC;EAChCqB,OAAO,EAAEC;AACb,CAAC,CAAC;AAEF,OAAO,MAAM;EAAElB,OAAO;EAAEC,UAAU;EAAEC,gBAAgB;EAAEC;AAAiB,CAAC,GAAGC,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
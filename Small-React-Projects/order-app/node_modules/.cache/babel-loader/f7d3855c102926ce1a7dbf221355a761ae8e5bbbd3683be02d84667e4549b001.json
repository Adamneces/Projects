{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\nexport function fetchCardData() {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://redux-project-9df01-default-rtdb.firebaseio.com/cart.json\");\n      if (!response.ok) {\n        throw new Error(\"Fetching cart data failed\");\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Erorr!...\",\n        message: \"Fetching cart data failed!\"\n      }));\n    }\n  };\n}\nexport function sendCartData(cart) {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data!\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://redux-project-9df01-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n    };\n    if (!response.ok) {\n      throw new Error(\"Sending cart data failed\");\n    }\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!...\",\n        message: \"Sent cart data successfully!\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Erorr!...\",\n        message: \"Sending cart data failed!\"\n      }));\n    }\n  };\n}","map":{"version":3,"names":["uiActions","cartActions","fetchCardData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"sources":["/home/adam/Plocha/React-Projects/Small-Projects/01-starting-project/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\n\nexport function fetchCardData() {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://redux-project-9df01-default-rtdb.firebaseio.com/cart.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Fetching cart data failed\");\n      }\n\n      const data = await response.json();\n\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartData));  \n\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Erorr!...\",\n          message: \"Fetching cart data failed!\",\n        })\n      );\n    }\n  };\n}\n\nexport function sendCartData(cart) {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data!\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://redux-project-9df01-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      );\n    };\n\n    if (!response.ok) {\n      throw new Error(\"Sending cart data failed\");\n    }\n\n    try {\n      await sendRequest();\n\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success!...\",\n          message: \"Sent cart data successfully!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Erorr!...\",\n          message: \"Sending cart data failed!\",\n        })\n      );\n    }\n  };\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,cAAc;AAE1C,OAAO,SAASC,aAAaA,CAAA,EAAG;EAC9B,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mEACF,CAAC;MAED,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,OAAOD,IAAI;IACb,CAAC;IAED,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMP,SAAS,CAAC,CAAC;MAClCD,QAAQ,CAACF,WAAW,CAACW,WAAW,CAACD,QAAQ,CAAC,CAAC;IAE7C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdV,QAAQ,CACNH,SAAS,CAACc,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,WAAW;QAClBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH;AAEA,OAAO,SAASC,YAAYA,CAACC,IAAI,EAAE;EACjC,OAAO,MAAOhB,QAAQ,IAAK;IACzBA,QAAQ,CACNH,SAAS,CAACc,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IAED,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mEAAmE,EACnE;QACEe,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;MAC3B,CACF,CAAC;IACH,CAAC;IAED,IAAI,CAACd,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC7C;IAEA,IAAI;MACF,MAAMY,WAAW,CAAC,CAAC;MAEnBjB,QAAQ,CACNH,SAAS,CAACc,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,aAAa;QACpBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdV,QAAQ,CACNH,SAAS,CAACc,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,WAAW;QAClBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
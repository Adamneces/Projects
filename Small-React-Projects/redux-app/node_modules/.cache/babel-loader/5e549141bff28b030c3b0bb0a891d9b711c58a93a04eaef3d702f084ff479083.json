{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter += action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n    reset(state) {\n      state.counter = 0;\n    }\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logOut(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","initialAuthState","isAuthenticated","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","reset","authSlice","login","logOut","store","reducer","auth","counterActions","actions","authActions"],"sources":["/home/adam/Plocha/React-Projects/Small-Projects/redux-app/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  counter: 0,\n  showCounter: true,\n};\nconst initialAuthState = {\n  isAuthenticated: false,\n}\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter += action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n    reset(state){\n      state.counter = 0;\n    }\n  },\n});\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: initialAuthState,\n  reducers: {\n    login(state){\n      state.isAuthenticated = true;\n    },\n    logOut(state){\n      state.isAuthenticated = false;\n    }\n  },\n});\n\n\n\nconst store = configureStore({\n  reducer: {counter: counterSlice.reducer, auth: authSlice.reducer},\n});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,CAAC;EACVC,WAAW,EAAE;AACf,CAAC;AACD,MAAMC,gBAAgB,GAAG;EACvBC,eAAe,EAAE;AACnB,CAAC;AAED,MAAMC,YAAY,GAAGP,WAAW,CAAC;EAC/BQ,IAAI,EAAE,SAAS;EACfN,YAAY;EACZO,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACR,OAAO,EAAE;IACjB,CAAC;IACDS,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACR,OAAO,EAAE;IACjB,CAAC;IACDU,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACR,OAAO,IAAIW,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACP,WAAW,GAAG,CAACO,KAAK,CAACP,WAAW;IACxC,CAAC;IACDa,KAAKA,CAACN,KAAK,EAAC;MACVA,KAAK,CAACR,OAAO,GAAG,CAAC;IACnB;EACF;AACF,CAAC,CAAC;AAEF,MAAMe,SAAS,GAAGlB,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZN,YAAY,EAAEG,gBAAgB;EAC9BI,QAAQ,EAAE;IACRU,KAAKA,CAACR,KAAK,EAAC;MACVA,KAAK,CAACL,eAAe,GAAG,IAAI;IAC9B,CAAC;IACDc,MAAMA,CAACT,KAAK,EAAC;MACXA,KAAK,CAACL,eAAe,GAAG,KAAK;IAC/B;EACF;AACF,CAAC,CAAC;AAIF,MAAMe,KAAK,GAAGpB,cAAc,CAAC;EAC3BqB,OAAO,EAAE;IAACnB,OAAO,EAAEI,YAAY,CAACe,OAAO;IAAEC,IAAI,EAAEL,SAAS,CAACI;EAAO;AAClE,CAAC,CAAC;AAEF,OAAO,MAAME,cAAc,GAAGjB,YAAY,CAACkB,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAAO;AAC5C,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}
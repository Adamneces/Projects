{"ast":null,"code":"var _jsxFileName = \"/home/adam/Plocha/React-Projects/Small-Projects/quiz-app/src/components/QuizOptions.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { quizAnswers } from '../data';\nimport QuizEndMessage from './QuizEndMessage';\nimport { correctAnswers } from '../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizOptions = props => {\n  _s();\n  const [correctCount, setCorrectCount] = useState();\n  const isIt = props.answersNumber === quizAnswers.length + 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isIt ? quizAnswers[props.answersNumber - 1].map(answer => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.onClick,\n        children: answer\n      }, answer, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 16\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(QuizEndMessage, {\n      count: correctCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizOptions, \"2dNPvYbbKcge4azrmcjM/y4p4uM=\");\n_c = QuizOptions;\nexport default QuizOptions;\nvar _c;\n$RefreshReg$(_c, \"QuizOptions\");","map":{"version":3,"names":["React","useState","quizAnswers","QuizEndMessage","correctAnswers","jsxDEV","_jsxDEV","QuizOptions","props","_s","correctCount","setCorrectCount","isIt","answersNumber","length","children","map","answer","onClick","fileName","_jsxFileName","lineNumber","columnNumber","count","_c","$RefreshReg$"],"sources":["/home/adam/Plocha/React-Projects/Small-Projects/quiz-app/src/components/QuizOptions.jsx"],"sourcesContent":["import React, {useState} from 'react'\nimport { quizAnswers } from '../data';\nimport QuizEndMessage from './QuizEndMessage';\nimport { correctAnswers } from '../data';\n\nconst QuizOptions = (props) => {\n  const [correctCount, setCorrectCount] = useState();\n\n  const isIt = props.answersNumber === quizAnswers.length + 1;\n\n  return (\n    <div>\n      {!isIt ? quizAnswers[props.answersNumber - 1].map((answer) => {\n        return <button onClick={props.onClick} key={answer}>{answer}</button>\n      }) : <QuizEndMessage count={correctCount} />}\n    </div>\n  )\n}\n\nexport default QuizOptions\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,WAAW,QAAQ,SAAS;AACrC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,cAAc,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAElD,MAAMW,IAAI,GAAGJ,KAAK,CAACK,aAAa,KAAKX,WAAW,CAACY,MAAM,GAAG,CAAC;EAE3D,oBACER,OAAA;IAAAS,QAAA,EACG,CAACH,IAAI,GAAGV,WAAW,CAACM,KAAK,CAACK,aAAa,GAAG,CAAC,CAAC,CAACG,GAAG,CAAEC,MAAM,IAAK;MAC5D,oBAAOX,OAAA;QAAQY,OAAO,EAAEV,KAAK,CAACU,OAAQ;QAAAH,QAAA,EAAeE;MAAM,GAAfA,MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAAC;IACvE,CAAC,CAAC,gBAAGhB,OAAA,CAACH,cAAc;MAACoB,KAAK,EAAEb;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAAAb,EAAA,CAZKF,WAAW;AAAAiB,EAAA,GAAXjB,WAAW;AAcjB,eAAeA,WAAW;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}